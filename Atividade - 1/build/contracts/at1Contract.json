{
  "contractName": "at1Contract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "onlyOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"onlyOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/at1Contract.sol\":\"at1Contract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/at1Contract.sol\":{\"keccak256\":\"0x0365e61796a87fd9f948ffc6683fed44b96b0af87534ca40001f77b5b4c3fef8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4838af7b32dd9879ba05f949afdee46c295546ff933246fa28ef7dda83e99a98\",\"dweb:/ipfs/QmUCwif1VWNAmdoSsG2V572UNBTJbLSmHk5J8BjXhB6HFz\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503360805260805160e861002d60003960006037015260e86000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631036e0a814602d575b600080fd5b60336035565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331460b05760405162461bcd60e51b815260206004820152601a60248201527f596f75206172656e2774206f776e657220636f6e747261637421000000000000604482015260640160405180910390fd5b56fea26469706673582212203cb9d359ccbe3d4dfef8e89b5496f2cf147d9d4c294d97e5701ada7355a7dad864736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80631036e0a814602d575b600080fd5b60336035565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331460b05760405162461bcd60e51b815260206004820152601a60248201527f596f75206172656e2774206f776e657220636f6e747261637421000000000000604482015260640160405180910390fd5b56fea26469706673582212203cb9d359ccbe3d4dfef8e89b5496f2cf147d9d4c294d97e5701ada7355a7dad864736f6c63430008130033",
  "immutableReferences": {
    "3": [
      {
        "length": 32,
        "start": 55
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:366:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:176:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:1",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:1"
                      },
                      {
                        "hexValue": "596f75206172656e2774206f776e657220636f6e747261637421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:28:1",
                        "type": "",
                        "value": "You aren't owner contract!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:56:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "332:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "344:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "355:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "340:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "332:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51d286564e957897eacfe1864790693c09292dc7ddb2e5d1f6a886cdc5049b4f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:1",
                "type": ""
              }
            ],
            "src": "14:350:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_51d286564e957897eacfe1864790693c09292dc7ddb2e5d1f6a886cdc5049b4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You aren't owner contract!\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "63:361:0:-:0;;;179:77;;;;;;;;;-1:-1:-1;212:10:0;204:18;;63:361;;;;;;;;;;;;",
  "deployedSourceMap": "63:361:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:155;;;:::i;:::-;;;313:5;-1:-1:-1;;;;;313:19:0;322:10;313:19;305:58;;;;-1:-1:-1;;;305:58:0;;216:2:1;305:58:0;;;198:21:1;255:2;235:18;;;228:30;294:28;274:18;;;267:56;340:18;;305:58:0;;;;;;;;264:155::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.19;\r\n\r\ncontract at1Contract {\r\n\r\n    address private immutable owner; // Endereço da carteira do Dono do contrato!\r\n\r\n    constructor() {\r\n        owner = msg.sender; // => Quem fez a chamada!\r\n    }\r\n\r\n    function onlyOwner() public {\r\n\r\n        require(owner == msg.sender, \"You aren't owner contract!\"); // Se quem chamou a função for o owner, ok!\r\n\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\lcosta\\Downloads\\Blockchain\\Codes\\Atividade - 1\\contracts\\at1Contract.sol",
  "ast": {
    "absolutePath": "project:/contracts/at1Contract.sol",
    "exportedSymbols": {
      "at1Contract": [
        25
      ]
    },
    "id": 26,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "at1Contract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25,
        "linearizedBaseContracts": [
          25
        ],
        "name": "at1Contract",
        "nameLocation": "72:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "119:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 25,
            "src": "93:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "93:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "193:63:0",
              "statements": [
                {
                  "expression": {
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "204:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "212:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "216:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "212:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "204:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "204:18:0"
                }
              ]
            },
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "190:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:0"
            },
            "scope": 25,
            "src": "179:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "292:127:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "313:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 17,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "322:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "326:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "322:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "313:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e2774206f776e657220636f6e747261637421",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "334:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51d286564e957897eacfe1864790693c09292dc7ddb2e5d1f6a886cdc5049b4f",
                          "typeString": "literal_string \"You aren't owner contract!\""
                        },
                        "value": "You aren't owner contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51d286564e957897eacfe1864790693c09292dc7ddb2e5d1f6a886cdc5049b4f",
                          "typeString": "literal_string \"You aren't owner contract!\""
                        }
                      ],
                      "id": 15,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "305:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "305:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "305:58:0"
                }
              ]
            },
            "functionSelector": "1036e0a8",
            "id": 24,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onlyOwner",
            "nameLocation": "273:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:0"
            },
            "scope": 25,
            "src": "264:155:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 26,
        "src": "63:361:0",
        "usedErrors": []
      }
    ],
    "src": "35:389:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-07T19:06:31.322Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}